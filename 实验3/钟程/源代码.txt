//代码1
public class Money { 
private int fAmount;//余额 
private String fCurrency;//货币类型 

public Money(int amount, String currency) { 
fAmount= amount; 
fCurrency= currency; 
} 

public int amount() { 
return fAmount; 
} 

public String currency() { 
return fCurrency; 
} 

public Money add(Money m) {//加钱 
return new Money(amount()+m.amount(), currency()); 
} 

public boolean equals(Object anObject) {//判断钱数是否相等 
if (anObject instanceof Money) { 
Money aMoney= (Money)anObject; 
return aMoney.currency().equals(currency()) 
&& amount() == aMoney.amount(); 
} 
return false; 
} 
} 

//代码2

public class InsertSort {
//

	    public  int [] insertSort(int []a){
      
	        //直接插入排序
	        for (int i = 1; i < a.length; i++) {
	            //待插入元素
	            int temp = a[i];
	            int j;
	            /*for (j = i-1; j>=0 && a[j]>temp; j--) {
	                //将大于temp的往后移动一位
	                a[j+1] = a[j];
	            }*/
	            for (j = i-1; j>=0; j--) {
	                //将大于temp的往后移动一位
	                if(a[j]>temp){
	                    a[j+1] = a[j];
	                }else{
	                    break;
	                }
	            }
	            a[j+1] = temp;
	        }
	        System.out.println();
	        return a;
	        }
	    }


import static org.junit.Assert.*;

import org.junit.Test;


public class InsertSortUnit {

	@Test
	public void testQSort() {
		//fail("Not yet implemented");
		InsertSort q=new InsertSort();
		int[] array1={2,2,2,2,2,2,2,2};
		int[] array2={2,2,2,2,2,2,2,2};
		assertArrayEquals(array2, q.insertSort(array1));
	}

}

